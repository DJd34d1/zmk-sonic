/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define CONTROL 3

combo_ret {
	timeout-ms = <50>;
	key-positions = <L '>;
	bindings = <&kp RET>;
	};
/ {
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
                &kp TAB    &kp Q     &kp W     &kp E  &kp R     &kp T      &kp Y   &kp U  &kp I     &kp O     &kp P     &kp BSPC
             &lt LOWER ESC &kp A     &kp S     &kp D  &kp F     &kp G      &kp H   &kp J  &kp K     &kp L               &kp SQT
                &kp LSHFT  &kp Z     &kp X     &kp C  &kp V     &kp B      &kp N   &kp M  &kp COMMA &kp DOT		&mt RSHFT SLASH
                &kp LCTRL  &kp LGUI  &kp LALT  &kp SPACE  &lt CONTROL SPACE  &lt RAISE SPACE  &mo RAISE  &kp FSLH  &mo LOWER
			>;
		};

		lower_layer {
			bindings = <
                &kp TILDE  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5     &kp N6     &kp N7     &kp N8    &kp N9  &kp N0  &kp DEL
                &trans     &kp LBRC   &kp RBRC   &kp LBKT  &kp RBKT  &kp PG_UP  &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT       &kp SEMI
                &trans     &kp PLUS   &kp EQUAL  &trans    &trans    &kp PG_DN  &trans     &kp PIPE   &kp LT    &kp GT          &trans
                &trans     &trans     &trans     &trans         &trans         &trans              &trans      &kp BSLH  &trans
			>;
		};
        
        raise_layer {
			bindings = <
                &kp GRAVE  &kp EXCL    &kp AT     &kp HASH   &kp DLLR     &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR   &kp RPAR   &kp F12
                &trans     &kp EQUAL   &kp PLUS   &trans     &trans       &trans     &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT             &kp SQT
                &trans     &kp K_REDO  &kp K_CUT  &kp K_COPY &kp K_PASTE  &trans     &trans     &kp LT    &kp GT               &kp MINUS  &kp UNDER
                &trans     &kp K_UNDO &trans    &trans                  &trans               &trans             &trans     &kp PIPE   &trans
			>;
		};
        
        control_layer {
			bindings = <
                &bt BT_CLR    &kp F1        &kp F2      &kp F3      &kp F4    &kp F5  &kp F6  &kp F7        &kp F8        &kp C_PREV    &kp F10   b&kp C_NEXT
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3      &bt BT_SEL 4    &trans  &trans  &kp C_BRI_DN  &kp C_BRI_UP  &trans        &kp C_PP
                &bt BT_NEXT  &out OUT_USB  &kp F11    &kp F12  &kp SLCK  &kp KP_NUM   &kp CAPS  &trans        &trans        &kp K_VOL_UP  &kp K_MUTE
                &bt BT_PRV  &out OUT_BLE  &kp PAUSE_BREAK  &reset                &trans          &bootloader         &trans  &kp K_VOL_DN  &trans
			>;
		};
	};
};
            
